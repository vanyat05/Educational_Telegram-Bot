import telebot
from telebot import types
from random import randint
import os
import random

# –¢–æ–∫–µ–Ω –≤–∞—à–µ–≥–æ –±–æ—Ç–∞ –æ—Ç BotFather
TOKEN = "your_bot_token_here"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ç–æ–∫–µ–Ω –∏–∑–º–µ–Ω–µ–Ω
if TOKEN == "your_bot_token_here":
    print("–û—à–∏–±–∫–∞: –¢–æ–∫–µ–Ω –±–æ—Ç–∞ –Ω–µ —É–∫–∞–∑–∞–Ω!")
    print("–ü–æ–ª—É—á–∏—Ç–µ —Ç–æ–∫–µ–Ω —É @BotFather –∏ –≤—Å—Ç–∞–≤—å—Ç–µ –µ–≥–æ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é TOKEN")
    exit(1)

# –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞
try:
    bot = telebot.TeleBot(TOKEN)
    print("‚úÖ –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω!")
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –±–æ—Ç–∞: {e}")
    exit(1)

@bot.message_handler(commands=['posts'])
def send_posts(message):
    bot.send_message(message.chat.id, "–ú–Ω–µ –≤—Å–µ–≥–¥–∞ –±—ã–ª–æ –∏–Ω—Ç–µ—Ä–µ—Å—Ç–Ω–æ –≤–∏–¥–µ—Ç—å –∫–∞–∫ –ª—é–¥–∏ —Å–ø–æ—Å–æ–±–Ω—ã —Å –ø–æ–º–æ—â—å—é –º–µ–Ω—Ç–∞–ª—å–Ω–æ–π –∞—Ä–∏—Ñ–º–µ—Ç–∏–∫–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—å –º–Ω–æ–∂–µ—Å—Ç–≤–æ –≤—ã—á–∏—Å–ª–µ–Ω–∏–π –∑–∞ —Å–µ–∫—É–Ω–¥—ã.\n"
                                      "–ü–æ—ç—Ç–æ–º—É –≤ –∫–∞—á–µ—Å—Ç–≤–µ –ø—Ä–µ–¥–º–µ—Ç–Ω–æ–π –æ–±–ª–∞—Å—Ç–∏ —è —Ä–µ—à–∏–ª –≤—ã–±—Ä–∞—Ç—å –º–µ–Ω—Ç–∞–ª—å–Ω—É—é –∞—Ä–∏—Ñ–º–µ—Ç–∏–∫—É, –∫–æ—Ç–æ—Ä–∞—è —Ä–∞–∑–≤–∏–≤–∞–µ—Ç –∑–Ω–∞–Ω–∏—è –≤ –º–∞—Ç–µ–º–∞—Ç–∏–∫–µ –∏ —É–ª—É—á—à–∞–µ—Ç —É—Å—Ç–Ω—ã–π —Å—á—ë—Ç\n")
    bot.send_message(message.chat.id, "–ë–æ—Ç –Ω–∞–ø–∏—Å–∞–Ω –Ω–∞ —è–∑—ã–∫–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ Python –≤ —Å—Ä–µ–¥–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ PyCharm, —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ telebot –∏–∑ Telegram Bot API.")
    bot.send_message(message.chat.id, "–í —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ –ø–æ–ª—É—á–∏–ª—Å—è –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π —Ä–∞—Å—Å–∫–∞–∂–µ—Ç –≤ —Ü–µ–ª–æ–º –ø—Ä–æ —ç—Ç–æ—Ç –ø—Ä–µ–¥–º–µ—Ç –∏ –ø—Ä–æ —Å–ª–æ–∂–µ–Ω–∏–µ, —Ä–∞–∑–Ω–æ—Å—Ç—å, —É–º–Ω–æ–∂–µ–Ω–∏–µ –∏ –¥–µ–ª–µ–Ω–∏–µ –≤ –º–µ–Ω—Ç–∞–ª—å–Ω–æ–π –∞—Ä–∏—Ñ–º–µ—Ç–∏–∫–µ.\n"
                                      "\n"
                                      "–ò—Ç–æ–≥–∏\n"
                                      "–£–¥–æ–±–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å —Å inline –∫–Ω–æ–ø–∫–∞–º–∏ –∏ —É–¥–æ–±–Ω—ã–º–∏ –º–µ–Ω—é.\n"
                                      "–ë–æ—Ç –Ω–µ–∑–µ—Ä–∫–∞–ª—å–Ω–æ –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è.\n"
                                      "–ë–æ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ñ–æ—Ç–æ –∏ –≤–∏–¥–µ–æ —Ñ–∞–π–ª—ã —Å –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–π —Ç–µ–æ—Ä–∏–µ–π.\n"
                                      "–ë–æ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã–µ –≤–æ–ø—Ä–æ—Å—ã —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –æ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–∏.")


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@bot.message_handler(commands=['start'])
def send_welcome(message):
    markup = types.InlineKeyboardMarkup()
    btn = types.InlineKeyboardButton("–ú–µ–Ω—éüìö", callback_data="menu")
    markup.add(btn)
    bot.send_message(message.chat.id, f"{message.from_user.first_name}, —è –æ–±—É—á–∞—é—â–∏–π –±–æ—Ç ü§ñ.\n"
                                      "–° –º–æ–∏–º–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏ –º–æ–∂–µ—à—å –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è –≤ menu.", reply_markup=markup)



# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /menu
@bot.message_handler(commands=['menu'])
def send_menu(message):
    markup = types.InlineKeyboardMarkup()
    btn = types.InlineKeyboardButton("–ú–µ–Ω—Ç–∞–ª—å–Ω–∞—è –∞—Ä–∏—Ñ–º–µ—Ç–∏–∫–∞üßÆ", callback_data="sections")
    markup.add(btn)

    bot.send_message(message.chat.id, "–¢–æ —á–µ–º—É —è –º–æ–≥—É –æ–±—É—á–∏—Ç—å:", reply_markup=markup)

@bot.message_handler(commands=['sections'])
def send_sections(message):
    markup = types.InlineKeyboardMarkup(row_width=1)
    btn1 = types.InlineKeyboardButton("–°–ª–æ–∂–µ–Ω–∏–µ –∏ –≤—ã—á–∏—Ç–∞–Ω–∏–µ‚ûï‚ûñ", callback_data="mentalarithmetic_1")
    btn2 = types.InlineKeyboardButton("–£–º–Ω–æ–∂–µ–Ω–∏–µ –∏ –¥–µ–ª–µ–Ω–∏–µ‚úñ‚ûó", callback_data="mentalarithmetic_2")
    markup.add(btn1, btn2)

    bot.send_message(message.chat.id, "–†–∞–∑–¥–µ–ª—ã:", reply_markup=markup)



# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /mentalarithmetic_1
@bot.message_handler(commands=['mentalarithmetic_1'])
def send_mental_1(message):
    markup = types.InlineKeyboardMarkup(row_width=1)
    btn1 = types.InlineKeyboardButton("–û–±—É—á–∞—é—â–µ–µ –≤–∏–¥–µ–æüéûÔ∏è", callback_data="mentalvideo")
    btn2 = types.InlineKeyboardButton("–°–ø—Ä–∞–≤–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—èüìñ", callback_data="mentaltext")
    btn3 = types.InlineKeyboardButton("–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µüñºÔ∏è", callback_data="mentalphoto")
    btn4 = types.InlineKeyboardButton("–¢–µ—Å—Çüìù", callback_data="mentaltest")
    btn5 = types.InlineKeyboardButton("–ö –≤—ã–±–æ—Ä—É —Ä–∞–∑–¥–µ–ª–æ–≤", callback_data="sections")
    markup.add(btn1, btn2, btn3, btn4, btn5)

    bot.send_message(message.chat.id, "–û—Ç–ª–∏—á–Ω–æ! –í—ã –≤—ã–±—Ä–∞–ª–∏ –º–µ–Ω—Ç–∞–ª—å–Ω—É—é –∞—Ä–∏—Ñ–º–µ—Ç–∏–∫—É, —Å–ª–æ–∂–µ–Ω–∏–µ –∏ –≤—ã—á–∏—Ç–∞–Ω–∏–µ.", reply_markup=markup)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /mentalvideo
@bot.message_handler(commands=['mentalvideo'])
def send_video(message):
    # –û—Ç–∫—Ä—ã–≤–∞–µ–º –≤–∏–¥–µ–æ—Ñ–∞–π–ª –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º
    video = open('Videos_1/' + random.choice(os.listdir('Videos_1')), 'rb')
    bot.send_video(message.chat.id, video, timeout=20000)
    video.close()


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /mentalphoto
# –°–æ–∑–¥–∞–µ–º —Å–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ –∏–Ω–¥–µ–∫—Å–∞ —Ñ–æ—Ç–æ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —á–∞—Ç–∞
current_photo_index = {}

@bot.message_handler(commands=['mentalphoto'])
def send_pic(message, path):
    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤ –≤ –ø–∞–ø–∫–µ Pictures_1
    photos = sorted(os.listdir(path))
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∏–Ω–¥–µ–∫—Å –¥–ª—è —á–∞—Ç–∞, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
    if message.chat.id not in current_photo_index:
        current_photo_index[message.chat.id] = 0

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â–µ–µ —Ñ–æ—Ç–æ
    send_photo_with_button(message.chat.id, photos, path)


def send_photo_with_button(chat_id, photos_list, path):
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π –∏–Ω–¥–µ–∫—Å –¥–ª—è —á–∞—Ç–∞
    index = current_photo_index.get(chat_id, 0)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –≤—ã—à–ª–∏ –ª–∏ –∑–∞ –ø—Ä–µ–¥–µ–ª—ã —Å–ø–∏—Å–∫–∞
    if index >= len(photos_list):
        index = 0
        current_photo_index[chat_id] = 0

    # –û—Ç–∫—Ä—ã–≤–∞–µ–º –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ
    photo_path = os.path.join(path, photos_list[index])
    with open(photo_path, 'rb') as photo:
        # –°–æ–∑–¥–∞–µ–º inline-–∫–Ω–æ–ø–∫—É
        markup = types.InlineKeyboardMarkup()
        next_button = types.InlineKeyboardButton("–î–∞–ª–µ–µ ‚Üí", callback_data=f"next_photo:{path}")
        markup.add(next_button)

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ —Å –∫–Ω–æ–ø–∫–æ–π
        bot.send_photo(chat_id, photo, reply_markup=markup)


@bot.callback_query_handler(func=lambda call: call.data.startswith("next_photo:"))
def next_photo_callback(call):
    path = call.data.split(":")[1]
    # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∏–Ω–¥–µ–∫—Å –¥–ª—è —ç—Ç–æ–≥–æ —á–∞—Ç–∞
    chat_id = call.message.chat.id
    current_photo_index[chat_id] = current_photo_index.get(chat_id, 0) + 1

    # –ü–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ —Ñ–æ—Ç–æ
    photos = sorted(os.listdir(path))

    # –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ñ–æ—Ç–æ
    bot.delete_message(chat_id, call.message.message_id)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–ª–µ–¥—É—é—â–µ–µ —Ñ–æ—Ç–æ
    send_photo_with_button(chat_id, photos, path)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /mentaltext
@bot.message_handler(commands=['mentaltext'])
def send_info(message):
    photo = open('Abacus/Soroban.png', 'rb')
    bot.send_photo(message.chat.id, photo, caption=
                                      "–ê–±–∞–∫—É—Å (—Å–æ—Ä–æ–±–∞–Ω) ‚Äî –¥—Ä–µ–≤–Ω–∏–µ —Å—á—ë—Ç—ã, –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –¥–ª—è –≤—ã—á–∏—Å–ª–µ–Ω–∏–π.\n"
                                      "–ö–∞–∂–¥–∞—è —Å–ø–∏—Ü–∞ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç —Ä–∞–∑—Ä—è–¥ (–µ–¥–∏–Ω–∏—Ü—ã, –¥–µ—Å—è—Ç–∫–∏, —Å–æ—Ç–Ω–∏ –∏ —Ç. –¥.).\n"
                                      "–ö–æ—Å—Ç–æ—á–∫–∏ –¥–µ–ª—è—Ç—Å—è –Ω–∞ –≤–µ—Ä—Ö–Ω–∏–µ (–Ω–µ–±–µ—Å–Ω—ã–µ) –∏ –Ω–∏–∂–Ω–∏–µ (–∑–µ–º–Ω—ã–µ).\n"
                                      "–í–µ—Ä—Ö–Ω—è—è –∫–æ—Å—Ç–æ—á–∫–∞ = 5 –µ–¥–∏–Ω–∏—Ü —Ç–µ–∫—É—â–µ–≥–æ —Ä–∞–∑—Ä—è–¥–∞.\n"
                                      "–ù–∏–∂–Ω–∏–µ –∫–æ—Å—Ç–æ—á–∫–∏ = –ø–æ 1 –µ–¥–∏–Ω–∏—Ü–µ –∫–∞–∂–¥–∞—è.\n")
    photo.close()
    bot.send_message(message.chat.id, "–ú–µ–Ω—Ç–∞–ª—å–Ω–∞—è –∞—Ä–∏—Ñ–º–µ—Ç–∏–∫–∞ ‚Äî —ç—Ç–æ –º–µ—Ç–æ–¥–∏–∫–∞ —Ä–∞–∑–≤–∏—Ç–∏—è —É–º—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–µ–π, –æ—Å–Ω–æ–≤–∞–Ω–Ω–∞—è"
                                      " –Ω–∞ —É—Å—Ç–Ω–æ–º —Å—á—ë—Ç–µ —Å –ø–æ–º–æ—â—å—é –∞–±–∞–∫—É—Å–∞ (—Å—á—ë—Ç–æ–≤) –∏ –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏. –û–Ω–∞ –ø–æ–º–æ–≥–∞–µ—Ç —É–ª—É—á—à–∏—Ç—å "
                                      "–∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏—é, –ø–∞–º—è—Ç—å, —Å–∫–æ—Ä–æ—Å—Ç—å –º—ã—à–ª–µ–Ω–∏—è –∏ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –Ω–∞–≤—ã–∫–∏.\n"
                                      "\n"
                                      "–ü—Ä–æ—Å—Ç—ã–µ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –Ω–∞ –∞–±–∞–∫—É—Å–µ\n"
                                      "–ü—Ä–∏–º–µ—Ä —Å–ª–æ–∂–µ–Ω–∏—è (3 + 4):\n"
                                      "–ü–æ–¥–Ω–∏–º–∏—Ç–µ 3 –Ω–∏–∂–Ω–∏–µ –∫–æ—Å—Ç–æ—á–∫–∏ (–µ–¥–∏–Ω–∏—Ü—ã).\n"
                                      "–î–æ–±–∞–≤—å—Ç–µ –µ—â—ë 4: —Ç–∞–∫ –∫–∞–∫ –æ—Å—Ç–∞–ª–∞—Å—å —Ç–æ–ª—å–∫–æ 1 –∫–æ—Å—Ç–æ—á–∫–∞, –æ–ø—É—Å—Ç–∏—Ç–µ –≤–µ—Ä—Ö–Ω—é—é (5) –∏ —É–±–µ—Ä–∏—Ç–µ 1 –Ω–∏–∂–Ω—é—é (–ø–æ–ª—É—á–∏—Ç—Å—è 5 ‚Äì 1 = 4).\n"
                                      "–ò—Ç–æ–≥: 7.\n"
                                      "–ü—Ä–∏–º–µ—Ä –≤—ã—á–∏—Ç–∞–Ω–∏—è (8 ‚Äì 3):\n"
                                      "–û—Ç–ª–æ–∂–∏—Ç–µ 8 (–≤–µ—Ä—Ö–Ω—è—è + 3 –Ω–∏–∂–Ω–∏–µ –∫–æ—Å—Ç–æ—á–∫–∏).\n"
                                      "–£–±–µ—Ä–∏—Ç–µ 3: –æ–ø—É—Å—Ç–∏—Ç–µ –≤–µ—Ä—Ö–Ω—é—é (5) –∏ –¥–æ–±–∞–≤—å—Ç–µ 2 (5 ‚Äì 3 = 2).\n"
                                      "–ò—Ç–æ–≥: 5.\n"
                                      "\n"
                                      "–ü–æ—Å–ª–µ –æ—Å–≤–æ–µ–Ω–∏—è –∞–±–∞–∫—É—Å–∞ —É—á–µ–Ω–∏–∫–∏ –ø–µ—Ä–µ—Ö–æ–¥—è—Ç –∫ –º—ã—Å–ª–µ–Ω–Ω–æ–º—É –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—é —Å—á—ë—Ç–æ–≤, –¥–≤–∏–≥–∞—è –∫–æ—Å—Ç–æ—á–∫–∏ –≤ —É–º–µ. –≠—Ç–æ —Ä–∞–∑–≤–∏–≤–∞–µ—Ç:\n"
                                      "–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫—É—é –ø–∞–º—è—Ç—å\n"
                                      "–°–∫–æ—Ä–æ—Å—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏\n"
                                      "–ö—Ä–µ–∞—Ç–∏–≤–Ω–æ–µ –º—ã—à–ª–µ–Ω–∏–µ")







# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /mentalarithmetic_2
@bot.message_handler(commands=['mentalarithmetic_2'])
def send_mental_2(message):
    markup = types.InlineKeyboardMarkup(row_width=1)
    btn1 = types.InlineKeyboardButton("–û–±—É—á–∞—é—â–µ–µ –≤–∏–¥–µ–æüéûÔ∏è", callback_data="mentalvideo_2")
    btn2 = types.InlineKeyboardButton("–°–ø—Ä–∞–≤–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—èüìñ", callback_data="mentaltext_2")
    btn3 = types.InlineKeyboardButton("–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µüñºÔ∏è", callback_data="mentalphoto_2")
    btn4 = types.InlineKeyboardButton("–¢–µ—Å—Çüìù", callback_data="mentaltest_2")
    btn5 = types.InlineKeyboardButton("–ö –≤—ã–±–æ—Ä—É —Ä–∞–∑–¥–µ–ª–æ–≤", callback_data="sections")
    markup.add(btn1, btn2, btn3, btn4, btn5)

    bot.send_message(message.chat.id, "–û—Ç–ª–∏—á–Ω–æ! –í—ã –≤—ã–±—Ä–∞–ª–∏ –º–µ–Ω—Ç–∞–ª—å–Ω—É—é –∞—Ä–∏—Ñ–º–µ—Ç–∏–∫—É, —É–º–Ω–æ–∂–µ–Ω–∏–µ –∏ –¥–µ–ª–µ–Ω–∏–µ.", reply_markup=markup)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /mentaltext_2
@bot.message_handler(commands=['mentaltext_2'])
def send_info_2(message):
    photo = open('Abacus/Soroban1.png', 'rb')
    bot.send_photo(message.chat.id, photo)

    bot.send_message(message.chat.id, "1. –£–º–Ω–æ–∂–µ–Ω–∏–µ –Ω–∞ –∞–±–∞–∫—É—Å–µ\n"
                                      "–£–º–Ω–æ–∂–µ–Ω–∏–µ –Ω–∞ –∞–±–∞–∫—É—Å–µ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –º–µ—Ç–æ–¥–∞ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è (—Ä–∞–∑–ª–æ–∂–µ–Ω–∏—è). –ö–∞–∂–¥–∞—è —Ü–∏—Ñ—Ä–∞ –º–Ω–æ–∂–∏—Ç–µ–ª—è —É–º–Ω–æ–∂–∞–µ—Ç—Å—è –Ω–∞ –∫–∞–∂–¥—É—é —Ü–∏—Ñ—Ä—É –º–Ω–æ–∂–∏–º–æ–≥–æ, –∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–∫–ª–∞–¥—ã–≤–∞—é—Ç—Å—è —Å —É—á–µ—Ç–æ–º —Ä–∞–∑—Ä—è–¥–æ–≤.\n"
    "–ü—Ä–∏–º–µ—Ä:\n"
    "23√ó4\n"
    "–†–∞–∑–ª–æ–∂–∏–º —É–º–Ω–æ–∂–µ–Ω–∏–µ:\n"
    "20√ó4 = 80\n"
    "3√ó4 = 12\n"
    "–°–ª–æ–∂–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã:\n"
    "80 + 12 = 92.\n"

    "–ù–∞ –∞–±–∞–∫—É—Å–µ —ç—Ç–æ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø–æ—à–∞–≥–æ–≤–æ:\n"
    "–û—Ç–ª–æ–∂–∏—Ç–µ 20, –∑–∞—Ç–µ–º –ø—Ä–∏–±–∞–≤—å—Ç–µ 20√ó4 = 80.\n"
    "–û—Ç–ª–æ–∂–∏—Ç–µ 3, –∑–∞—Ç–µ–º –ø—Ä–∏–±–∞–≤—å—Ç–µ 3√ó4 = 12.\n"
    "–ò—Ç–æ–≥: 92.\n"

    "2.–î–µ–ª–µ–Ω–∏–µ –Ω–∞ –∞–±–∞–∫—É—Å–µ\n"
    "–î–µ–ª–µ–Ω–∏–µ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è —á–µ—Ä–µ–∑ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ–µ –≤—ã—á–∏—Ç–∞–Ω–∏–µ –¥–µ–ª–∏—Ç–µ–ª—è –∏–∑ –¥–µ–ª–∏–º–æ–≥–æ —Å –ø–æ–¥—Å—á–µ—Ç–æ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –æ–ø–µ—Ä–∞—Ü–∏–π.\n"

    "–ü—Ä–∏–º–µ—Ä: 56√∑7\n"
    "–û–ø—Ä–µ–¥–µ–ª–∏–º, —Å–∫–æ–ª—å–∫–æ —Ä–∞–∑ 7 –ø–æ–º–µ—â–∞–µ—Ç—Å—è –≤ 56:\n"
    "56‚àí7 = 49(1—Ä–∞–∑)\n"
    "49‚àí7 = 42(2—Ä–∞–∑–∞)\n"
    "...\n"
    "7‚àí7 = 0(8—Ä–∞–∑)\n"
    "–ò—Ç–æ–≥: 8.")


user_data = {}  # –ë—É–¥–µ—Ç —Ö—Ä–∞–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –≤–∏–¥–∞ {chat_id: {"score": int, "current_question": int}}
t = 0


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /mentaltest
@bot.message_handler(commands=['mentaltest'])
def start_test(message):
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (—Ä–µ–∑—É–ª—å—Ç–∞—Ç, –Ω–æ–º–µ—Ä –≤–æ–ø—Ä–æ—Å–∞)
    user_data[message.chat.id] = {"score": 0, "current_question": 1}
    ask_question(message)
    # –ø—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –æ—Ç–∫—Ä—ã—Ç –≤—Ç–æ—Ä–æ–π —Ç–µ—Å—Ç

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /mentaltest_2 (–≤—Ç–æ—Ä–æ–π —Ç–µ—Å—Ç)
@bot.message_handler(commands=['mentaltest_2'])
def start_test_2(message):
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (—Ä–µ–∑—É–ª—å—Ç–∞—Ç, –Ω–æ–º–µ—Ä –≤–æ–ø—Ä–æ—Å–∞)
    user_data[message.chat.id] = {"score": 0, "current_question": 10}
    ask_question(message)


# –§—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –∑–∞–¥–∞—ë—Ç –≤–æ–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
def ask_question(message):
    chat_id = message.chat.id  # —Å–æ–∫—Ä–∞—â–∞–µ–º –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞
    current_q = user_data[chat_id]["current_question"]  # –±–µ—Ä—ë–º –Ω–æ–º–µ—Ä –≤–æ–ø—Ä–æ—Å–∞

    # –°–æ–∑–¥–∞–Ω–∏–µ –≤—Å–ø–ª—ã–≤–∞—é—â–µ–≥–æ –º–µ–Ω—é
    markup = types.ReplyKeyboardMarkup(row_width=3)
    buttons = [types.KeyboardButton(str(i)) for i in range(1, 4)]
    markup.add(*buttons)

    if current_q == 1:
        bot.send_message(chat_id, "–ß—Ç–æ —Ç–∞–∫–æ–µ –∞–±–∞–∫—É—Å?\n"
                                  "1) –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä\n"
                                  "2) –î—Ä–µ–≤–Ω–∏–µ —Å—á—ë—Ç—ã\n"
                                  "3) –õ–∏–Ω–µ–π–∫–∞", reply_markup=markup)  # –†–∞–∑–º–µ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–∞
    elif current_q == 2:
        bot.send_message(chat_id, "–°–∫–æ–ª—å–∫–æ –µ–¥–∏–Ω–∏—Ü –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –≤–µ—Ä—Ö–Ω—è—è –∫–æ—Å—Ç–æ—á–∫–∞ –Ω–∞ –∞–±–∞–∫—É—Å–µ?\n"
                                  "1) 1\n"
                                  "2) 5\n"
                                  "3) 10", reply_markup=markup)
    elif current_q == 3:
        bot.send_message(chat_id, "–ö–∞–∫ –æ—Ç–ª–æ–∂–∏—Ç—å —á–∏—Å–ª–æ 7 –Ω–∞ –∞–±–∞–∫—É—Å–µ?\n"
                                  "1) –í–µ—Ä—Ö–Ω—è—è + 2 –Ω–∏–∂–Ω–∏–µ –∫–æ—Å—Ç–æ—á–∫–∏\n"
                                  "2) –¢–æ–ª—å–∫–æ –≤–µ—Ä—Ö–Ω—è—è\n"
                                  "3) 7 –Ω–∏–∂–Ω–∏—Ö –∫–æ—Å—Ç–æ—á–µ–∫", reply_markup=markup)
    elif current_q == 4:
        bot.send_message(chat_id, "–ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å 4 –∏–∑ 9 –Ω–∞ –∞–±–∞–∫—É—Å–µ?\n"
                                  "1) –£–±—Ä–∞—Ç—å –≤–µ—Ä—Ö–Ω—é—é –∫–æ—Å—Ç–æ—á–∫—É –∏ –¥–æ–±–∞–≤–∏—Ç—å 1 –Ω–∏–∂–Ω—é—é\n"
                                  "2) –£–±—Ä–∞—Ç—å –≤–µ—Ä—Ö–Ω—é—é –∏ 4 –Ω–∏–∂–Ω–∏–µ\n"
                                  "3) –°–±—Ä–æ—Å–∏—Ç—å –≤—Å–µ –∫–æ—Å—Ç–æ—á–∫–∏", reply_markup=markup)

    elif current_q == 5:
        photo = open('Abacus/7.png', 'rb')
        bot.send_photo(message.chat.id, photo, caption=
        "–ö–∞–∫–∞—è —Ü–∏—Ñ—Ä–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∞ –Ω–∞ –∞–±–∞–∫—É—Å–µ?\n"
        "1) 7\n"
        "2) 8\n"
        "3) 5", reply_markup=markup)
        photo.close()

    elif current_q == 6:
        bot.send_message(chat_id, "–ö–∞–∫ –≤—ã–≥–ª—è–¥–∏—Ç —á–∏—Å–ª–æ 3 –Ω–∞ –∞–±–∞–∫—É—Å–µ?\n"
                                  "1) 3 –Ω–∏–∂–Ω–∏–µ –∫–æ—Å—Ç–æ—á–∫–∏\n"
                                  "2) –í–µ—Ä—Ö–Ω—è—è –∫–æ—Å—Ç–æ—á–∫–∞\n"
                                  "3) 1 –≤–µ—Ä—Ö–Ω—è—è + 2 –Ω–∏–∂–Ω–∏–µ", reply_markup=markup)
    elif current_q == 7:
        bot.send_message(chat_id, "–ß—Ç–æ —Ç–∞–∫–æ–µ –º–µ–Ω—Ç–∞–ª—å–Ω—ã–π —Å—á—ë—Ç?\n"
                                  "1) –°–ª–æ–∂–µ–Ω–∏–µ –Ω–∞ –±—É–º–∞–≥–µ\n"
                                  "2) –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –∞–±–∞–∫—É—Å–∞ –≤ —É–º–µ\n"
                                  "3) –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞", reply_markup=markup)
    elif current_q == 8:
        bot.send_message(chat_id, "–ö–∞–∫–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è: –í–µ—Ä—Ö–Ω—è—è + 1 –Ω–∏–∂–Ω—è—è = 6?\n"
                                  "1) 5 + 1\n"
                                  "2) 4 + 2\n"
                                  "3) 3 + 3", reply_markup=markup)

    elif current_q == 9:
        photo = open('Abacus/86.png', 'rb')
        bot.send_photo(message.chat.id, photo, caption=
        "–ö–∞–∫–æ–µ —á–∏—Å–ª–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–æ –Ω–∞ –∞–±–∞–∫—É—Å–µ?\n"
        "1) 28\n"
        "2) 75\n"
        "3) 86", reply_markup=markup)
        photo.close()

    if current_q == 10:
        bot.send_message(chat_id, "–ö–∞–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ —É–º–Ω–æ–∂–∏—Ç—å 15√ó6 –Ω–∞ –∞–±–∞–∫—É—Å–µ?\n"
                                  "1) 10√ó6=60, –∑–∞—Ç–µ–º 5√ó6=30, –∏—Ç–æ–≥–æ 60+30=90\n"
                                  "2) 15+6=21\n"
                                  "3) 6√ó10=60, –∑–∞—Ç–µ–º 6√ó5=30, –∏—Ç–æ–≥–æ 60‚àí30=30", reply_markup=markup)  # –†–∞–∑–º–µ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–∞
    elif current_q == 11:
        bot.send_message(chat_id, "–ö–∞–∫ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –¥–µ–ª–µ–Ω–∏–µ 72√∑8 –Ω–∞ –∞–±–∞–∫—É—Å–µ?\n"
                                  "1) 72‚àí8 —Ä–æ–≤–Ω–æ 7 —Ä–∞–∑, –ø–æ–∫–∞ –Ω–µ –ø–æ–ª—É—á–∏—Ç—Å—è 16\n"
                                  "2) 72‚àí8 9 —Ä–∞–∑, –ø–æ–∫–∞ –Ω–µ –ø–æ–ª—É—á–∏—Ç—Å—è 0\n"
                                  "3) 8√ó9=72, –∑–Ω–∞—á–∏—Ç, –æ—Ç–≤–µ—Ç 9", reply_markup=markup)
    elif current_q == 12:
        bot.send_message(chat_id, "–ö–∞–∫–æ–π –º–µ—Ç–æ–¥ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —É–º–Ω–æ–∂–µ–Ω–∏—è –º–Ω–æ–≥–æ–∑–Ω–∞—á–Ω—ã—Ö —á–∏—Å–µ–ª –Ω–∞ –∞–±–∞–∫—É—Å–µ?\n"
                                  "1) –ü—Ä–æ—Å—Ç–æ–µ —Å–ª–æ–∂–µ–Ω–∏–µ\n"
                                  "2) –†–∞–∑–ª–æ–∂–µ–Ω–∏–µ –ø–æ —Ä–∞–∑—Ä—è–¥–∞–º –∏ –ø–æ—ç—Ç–∞–ø–Ω–æ–µ —É–º–Ω–æ–∂–µ–Ω–∏–µ\n"
                                  "3) –¢–æ–ª—å–∫–æ —É–º–Ω–æ–∂–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Ü–∏—Ñ—Ä", reply_markup=markup)
    elif current_q == 13:
        bot.send_message(chat_id, " –ï—Å–ª–∏ –ø—Ä–∏ –¥–µ–ª–µ–Ω–∏–∏ 45√∑5 –Ω–∞ –∞–±–∞–∫—É—Å–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å 9, —Å–∫–æ–ª—å–∫–æ —Ä–∞–∑ –≤—ã—á–ª–∏ 5?\n"
                                  "1) 5 —Ä–∞–∑\n"
                                  "2) 9 —Ä–∞–∑\n"
                                  "3) 10 —Ä–∞–∑", reply_markup=markup)
    elif current_q == 14:
        bot.send_message(chat_id, " –ß–µ–º—É —Ä–∞–≤–Ω–æ 132 √∑ 12 —á–µ—Ä–µ–∑ —Ä–∞–∑–ª–æ–∂–µ–Ω–∏–µ?\n"
                                  "1) (120√∑12) + (12√∑12) = 11\n"
                                  "2) (100√∑12) + (32√∑12) ‚âà 11\n"
                                  "3) 132 √∑ (6√ó2) = 11", reply_markup=markup)


@bot.message_handler(func=lambda m: m.text in ['1', '2', '3'] and m.chat.id in user_data)
def handle_answer(message):
    chat_id = message.chat.id
    user_state = user_data[chat_id]
    current_q = user_state["current_question"]
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç–≤–µ—Ç
    if user_state["current_question"] == 1 and message.text == '2':
        user_state["score"] += 1
    elif user_state["current_question"] == 2 and message.text == '2':
        user_state["score"] += 1
    elif user_state["current_question"] == 3 and message.text == '1':
        user_state["score"] += 1
    elif user_state["current_question"] == 4 and message.text == '2':
        user_state["score"] += 1
    elif user_state["current_question"] == 5 and message.text == '1':
        user_state["score"] += 1
    elif user_state["current_question"] == 6 and message.text == '1':
        user_state["score"] += 1
    elif user_state["current_question"] == 7 and message.text == '2':
        user_state["score"] += 1
    elif user_state["current_question"] == 8 and message.text == '1':
        user_state["score"] += 1
    elif user_state["current_question"] == 9 and message.text == '3':
        user_state["score"] += 1


    elif user_state["current_question"] == 10 and message.text == '1':
        user_state["score"] += 1
    elif user_state["current_question"] == 11 and message.text == '2':
        user_state["score"] += 1
    elif user_state["current_question"] == 12 and message.text == '2':
        user_state["score"] += 1
    elif user_state["current_question"] == 13 and message.text == '2':
        user_state["score"] += 1
    elif user_state["current_question"] == 14 and message.text == '1':
        user_state["score"] += 1
    else:
        bot.send_message(chat_id, f"–ù–µ–≤–µ—Ä–Ω–æ")

    # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –≤–æ–ø—Ä–æ—Å—É –∏–ª–∏ –∑–∞–≤–µ—Ä—à–∞–µ–º —Ç–µ—Å—Ç
    if current_q < 9:  # –ü–µ—Ä–≤—ã–π —Ç–µ—Å—Ç
        user_state["current_question"] += 1
        ask_question(message)
    elif current_q == 9:  # –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –ø–µ—Ä–≤–æ–≥–æ —Ç–µ—Å—Ç–∞
        bot.send_message(chat_id, f"–í—ã –Ω–∞–±—Ä–∞–ª–∏ {user_state['score']}/9 –±–∞–ª–ª–æ–≤.",
                         reply_markup=types.ReplyKeyboardRemove())

        markup = types.InlineKeyboardMarkup(row_width=1)
        btn1 = types.InlineKeyboardButton("–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data="mentalarithmetic_1")
        markup.add(btn1)

        if user_state['score'] >= 8:
            bot.send_message(chat_id, "–û—Ç–ª–∏—á–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç!", reply_markup=markup)
        elif user_state['score'] >= 5:
            bot.send_message(chat_id, "–ù–æ—Ä–º–∞–ª—å–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç. –í—ã –ø–æ—á—Ç–∏ —É —Ü–µ–ª–∏!", reply_markup=markup)
        else:
            bot.send_message(chat_id, "–ü–ª–æ—Ö–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç. –°—Ç–æ–∏—Ç –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å—Å—è –µ—â—ë.", reply_markup=markup)

        del user_data[chat_id]

    elif 10 <= current_q < 14:  # –í—Ç–æ—Ä–æ–π —Ç–µ—Å—Ç
        user_state["current_question"] += 1
        ask_question(message)
    elif current_q == 14:  # –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –≤—Ç–æ—Ä–æ–≥–æ —Ç–µ—Å—Ç–∞
        bot.send_message(chat_id, f"–í—ã –Ω–∞–±—Ä–∞–ª–∏ {user_state['score']}/5 –±–∞–ª–ª–æ–≤.",
                         reply_markup=types.ReplyKeyboardRemove())

        markup = types.InlineKeyboardMarkup(row_width=1)
        btn1 = types.InlineKeyboardButton("–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data="mentalarithmetic_2")
        markup.add(btn1)

        if user_state['score'] == 5:
            bot.send_message(chat_id, "–û—Ç–ª–∏—á–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç!", reply_markup=markup)
        elif user_state['score'] >= 3:
            bot.send_message(chat_id, "–ù–æ—Ä–º–∞–ª—å–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç. –í—ã –ø–æ—á—Ç–∏ —É —Ü–µ–ª–∏!", reply_markup=markup)
        else:
            bot.send_message(chat_id, "–ü–ª–æ—Ö–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç. –°—Ç–æ–∏—Ç –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å—Å—è –µ—â—ë.", reply_markup=markup)

        del user_data[chat_id]

@bot.message_handler(commands=['mentalvideo_2'])
def send_video_2(message):
    # –û—Ç–∫—Ä—ã–≤–∞–µ–º –≤–∏–¥–µ–æ—Ñ–∞–π–ª –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º
    video = open('Videos_2/' + random.choice(os.listdir('Videos_2')), 'rb')
    bot.send_video(message.chat.id, video, timeout=20000)
    video.close()



# –û–±—Ä–∞–±–æ—Ç–∫–∞ inline –∫–Ω–æ–ø–æ–∫
@bot.callback_query_handler(func=lambda call: True)
def handle_menu_click(call):
    if call.data == "menu":
        # –ú–æ–∂–Ω–æ –≤—ã–∑–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é, —Å–≤—è–∑–∞–Ω–Ω—É—é —Å /menu
        send_menu(call.message)
    if call.data == "sections":
        # –ú–æ–∂–Ω–æ –≤—ã–∑–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é, —Å–≤—è–∑–∞–Ω–Ω—É—é —Å /menu
        send_sections(call.message)


    if call.data == "mentalarithmetic_1":
        # –ú–æ–∂–Ω–æ –≤—ã–∑–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é, —Å–≤—è–∑–∞–Ω–Ω—É—é —Å /mentalarithmetic_1
        send_mental_1(call.message)
    if call.data == "mentalvideo":
        # –ú–æ–∂–Ω–æ –≤—ã–∑–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é, —Å–≤—è–∑–∞–Ω–Ω—É—é —Å /mentalvideo
        send_video(call.message)
    if call.data == "mentalphoto":
        # –ú–æ–∂–Ω–æ –≤—ã–∑–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é, —Å–≤—è–∑–∞–Ω–Ω—É—é —Å /mentalphoto
        send_pic(call.message, "Pictures_1")
    if call.data == "mentaltext":
        # –ú–æ–∂–Ω–æ –≤—ã–∑–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é, —Å–≤—è–∑–∞–Ω–Ω—É—é —Å /mentaltext
        send_info(call.message)
    if call.data == "mentaltest":
        # –ú–æ–∂–Ω–æ –≤—ã–∑–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é, —Å–≤—è–∑–∞–Ω–Ω—É—é —Å /mentaltest
        start_test(call.message)


    if call.data == "mentalarithmetic_2":
        # –ú–æ–∂–Ω–æ –≤—ã–∑–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é, —Å–≤—è–∑–∞–Ω–Ω—É—é —Å /mentalarithmetic_2
        send_mental_2(call.message)
    if call.data == "mentaltext_2":
        # –ú–æ–∂–Ω–æ –≤—ã–∑–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é, —Å–≤—è–∑–∞–Ω–Ω—É—é —Å /mentaltext_2
        send_info_2(call.message)
    if call.data == "mentaltest_2":
        # –ú–æ–∂–Ω–æ –≤—ã–∑–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é, —Å–≤—è–∑–∞–Ω–Ω—É—é —Å /mentaltest_2
        start_test_2(call.message)
    if call.data == "mentalvideo_2":
        # –ú–æ–∂–Ω–æ –≤—ã–∑–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é, —Å–≤—è–∑–∞–Ω–Ω—É—é —Å /mentalvideo_2
        send_video_2(call.message)
    if call.data == "mentalphoto_2":
        # –ú–æ–∂–Ω–æ –≤—ã–∑–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é, —Å–≤—è–∑–∞–Ω–Ω—É—é —Å /mentalphoto_2
        send_pic(call.message, "Pictures_2")


greetings = ['–ø—Ä–∏–≤–µ—Ç', '–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π', '–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ', 'hello', 'hi', '—Ö–∞–π', '–∑–¥–æ—Ä–æ–≤–∞', '–¥–æ–±—Ä—ã–π –¥–µ–Ω—å', '–¥–æ–±—Ä–æ–µ —É—Ç—Ä–æ',
             '–¥–æ–±—Ä—ã–π –≤–µ—á–µ—Ä']

@bot.message_handler(content_types=['text'])
def handle_message(message):
    # –ü—Ä–∏–≤–æ–¥–∏–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –∫ –Ω–∏–∂–Ω–µ–º—É —Ä–µ–≥–∏—Å—Ç—Ä—É –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
    text = message.text.lower()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–¥–µ—Ä–∂–∏—Ç –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
    if any(greeting in text for greeting in greetings):
        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton("–ß—Ç–æ —Ç—ã —É–º–µ–µ—à—å?")
        markup.add(btn1)

        # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ä–∞–Ω–¥–æ–º–Ω–æ–≥–æ –∏–Ω–¥–µ–∫—Å–∞ –¥–ª—è –Ω–µ–∑–µ—Ä–∫–∞–ª—å–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞
        while True:
            x = randint(0, 9)
            # –ï—Å–ª–∏ —Ä–∞–Ω–¥–æ–º–Ω–æ–µ —Å–ª–æ–≤–æ –Ω–µ —Ä–∞–≤–Ω–æ –≤–≤–µ–¥–µ–Ω–Ω–æ–º—É, —Ç–æ –æ–Ω–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ –æ—Ç–≤–µ—Ç–µ
            if greetings[x] != text:
                word = greetings[x]
                break

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç —Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ–º
        # capitalize() - –¥–µ–ª–∞–µ—Ç —Å—Ç—Ä–æ–∫—É —Å –∑–∞–≥–ª–∞–≤–Ω–æ–π –±—É–∫–≤—ã
        bot.reply_to(message, f"{word.capitalize()}, {message.from_user.first_name}! üòä –†–∞–¥ —Ç–µ–±—è –≤–∏–¥–µ—Ç—å!", reply_markup=markup)
    elif "—á—Ç–æ —Ç—ã —É–º–µ–µ—à—å" in text:
        send_welcome(message)
    else:
        bot.reply_to(message, "–ò–∑–≤–∏–Ω–∏, —è –Ω–µ –ø–æ–Ω–∏–º–∞—é. –ù–∞–ø–∏—à–∏ '–ø—Ä–∏–≤–µ—Ç' –∏–ª–∏ –ª—é–±—É—é –∫–æ–º–∞–Ω–¥—É –≤–æ –≤–∫–ª–∞–¥–∫–µ –º–µ–Ω—é!")


bot.polling()